/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/brick-wall.glb -s 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function BrickWall({ position, rotation, size }) {
  const { nodes, materials } = useGLTF('/brick-wall.glb')

  const meshRotation = [0, (rotation*Math.PI/2) +Math.PI/2, 0]
  const meshPosition = [
    size[0]/2,
    0,
    size[2]/2,
  ]
  if (rotation == 1 || rotation == 3) {
    meshPosition[0] = size[2]/2
    meshPosition[2] = size[0]/2
  }

  return (
    <group position={position} dispose={null}>
      <mesh 
        castShadow 
        receiveShadow 
        geometry={nodes['brick-wall'].geometry} 
        material={materials['brick-wall']} 
        position={meshPosition}
        rotation={meshRotation}
      />
    </group>
  )
}

useGLTF.preload('/brick-wall.glb')
