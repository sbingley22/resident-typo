/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/chair.glb -s 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Chair({ position, rotation, size }) {
  const { nodes, materials } = useGLTF('/chair.glb')

  const meshRotation = [0,rotation*Math.PI/2,0]
  const meshPosition = [
    size[0]/2,
    size[1]/2,
    size[2]/2,
  ]
  if (rotation == 1 || rotation == 3) {
    meshPosition[0] = size[2]/2
    meshPosition[2] = size[0]/2
  }

  return (
    <group position={position} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.chair.geometry} 
      material={materials.chair} 
      position={meshPosition}
      rotation={meshRotation}
      />
    </group>
  )
}

useGLTF.preload('/chair.glb')
